`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
//
//Students: Brett Bushnell (Undergrad), Matt Dzurick (Grad)
//Date Created: Wed Dec  7 01:51:55 2016
//Assignment: 3
//File: test.v
//Description: An HLSM module which represents the C-like behavioral description 
//             into a scheduled high-level statement machine implemented in Verilog.
//
//////////////////////////////////////////////////////////////////////////////////

module HLSM(Clk, Rst, Start, Done, a, b, c, d, zero, z);
	input Clk, Rst, Start;
	output reg Done;

	input [63:0] a, b, c, d, zero;

	output [63:0] z;

	reg gEQz;
	reg [63:0] e, f, g;

	reg[4:0] state;
	parameter sWait = 0, s2 = 1, s3 = 2, s4 = 3, s5 = 4, s6 = 5, s7 = 6, s8 = 7, s9 = 8, s10 = 9, s11 = 10, s12 = 11, s13 = 12, s14 = 13, sFinal = 14;

	always@(posedge Clk) begin
		if(Rst == 1) begin
			state <= sWait;
			e <= 0;
			f <= 0;
			g <= 0;
			gEQz <= 0;
			z <= 0;
			Done <= 0;
		end
		else begin
			case(state)
				sWait: begin
					Done <= 0;
					if (Start == 1)
						state <= s2;
					else
						state <= sWait;
				end
				s2: begin
				sFinal: begin
					Done <= 1;
					state <= sWait;
				end
			endcase
		end
	end

endmodule
