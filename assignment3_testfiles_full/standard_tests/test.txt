`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
//
//Students: Brett Bushnell (Undergrad), Matt Dzurick (Grad)
//Date Created: Sat Dec  3 21:58:20 2016
//Assignment: 3
//File: test.v
//Description: An HLSM module which represents the C-like behavioral description 
//             into a scheduled high-level statement machine implemented in Verilog.
//
//////////////////////////////////////////////////////////////////////////////////

module HLSM(Clk, Rst, Start, Done a, b, c, z, x);
	input Clk, Rst, Start;
	output reg Done;
	input [15:0] a, b, c;

	output [7:0] z;
	output [15:0] x;

	wire [7:0] d, e, f, g;

	reg[TODO:0] state;
	parameter sWait = 0, s2 = 1, s3 = 2, s4 = 3, s5 = 4, s6 = 5, s7 = 6, Final = 7;

	always@(posedge Clk) begin
		if(Rst == 1) begin
			state <= sWait;
			Done <= 0;
			z <= 0;
			x <= 0;
	end
	else begin
		case(state)
			sWait: begin
				if (Start == 1)
					state <= s2;
				else
					state <= sWait;
			end
			s2: begin
				TODO
				TODO
				NextState <= TODO
			end
			s3: begin
				NextState <= TODO
			end
			s4: begin
				TODO
				NextState <= TODO
			end
			s5: begin
				TODO
				TODO
				NextState <= TODO
			end
			s6: begin
				TODO
				NextState <= TODO
			end
			Final: begin
				Done <= 1;
				NextState <= Wait;
			end
		endcase
	end


endmodule
